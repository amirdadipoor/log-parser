input {

    stdin {
		
        add_field => {
			"[fields][siemevent]" => "true"
			"[event][plugin_id]" => 7225
			
		}
    }

}

filter {


	if [fields][siemevent] and ([event][plugin_id] == 7225 or [event][plugin_id] == "7225") {

	
	

		grok {
			
			patterns_dir => "/etc/logstash/patterns/kerio" 
			
			match => {
				"message" =>  [
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{ID_TAG} %{INT:log_id} %{RULE_TAG} %{KERIO_RULE:rule_name}( %{SERVICE_TAG} %{KERIO_SIMPLE_SENTENCE:service})?( %{USER_TAG} %{USERNAME:username})? %{CONNECTION_TAG:connection_tag} %{WORD:protocol}( %{URIHOST:src_url})? %{START_OPT_PRNTS}%{IP:src_ip}%{END_OPT_PRNTS}(:%{INT:src_port})? ->( %{URIHOST:dst_url})? %{START_OPT_PRNTS}%{IP:dst_ip}%{END_OPT_PRNTS}(:%{INT:dst_port})?( %{INTERFACE_TAG} %{WORD:interface})? %{DURATION_TAG} %{INT:duration} %{WORD:duration_unit} %{BYTES_TAG} %{INT:transmitted_bytes}\/%{INT:accepted_bytes}\/%{INT:total_bytes} %{PACKETS_TAG} %{INT:transmitted_packets}\/%{INT:accepted_packets}\/%{INT:total_packets}%{GREEDYDATA}", # CONNECTION
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{IP:client_ip} - %{USERNAME:username}(@%{HOSTNAME:domain})? \[%{HTTPDATE:event_time}%{GREEDYDATA:payload}\] \"%{WORD:http_method} %{URI:url} HTTP/%{NUMBER:http_version}\" %{INT:response_code} %{INT:transferred_bytes}( %{INT:request_count})?%{GREEDYDATA:payload}", # WEB
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{IP:client_ip} %{USERNAME:username}(@%{HOSTNAME:domain})? \"%{GREEDYDATA:page_title}\" %{URI:url}%{GREEDYDATA:payload}", # WEB
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{IPV4_TAG} %{IP:client_ip} %{MAC_TAG:mac_tag} %{MAC:client_mac_address} (\(%{DEVICE_VENDOR_NAME:client_device_vendor}\) )?%{HOST_TAG} %{HOSTNAME:client_host_name} - %{GREEDYDATA:msg}" , # HOST
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{IPV4_TAG} %{IP:client_ip}( %{MAC_TAG:mac_tag} %{MAC:client_mac_address})? (\(%{DEVICE_VENDOR_NAME:client_device_vendor}\) )?(- User)?(%{USER_TAG})? %{USERNAME:username}(@%{HOSTNAME:domain})?( - )?\s*%{KERIO_HOST_MESSAGE:msg}" , # HOST , VPN connection
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{IPV4_TAG} %{IP:client_ip}( %{MAC_TAG:mac_tag} %{MAC:client_mac_address})? (\(%{DEVICE_VENDOR_NAME:client_device_vendor}\) )?- %{KERIO_SIMPLE_SENTENCE:msg}" , # HOST , VPN connection
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{KERIO_PUB_SENTC:rule_name}: %{KERIO_PUB_MSG:log_action},( %{SEVERITY}: %{WORD:severity}, %{RULE_ID}: %{KERIO_RULE_ID_FORMAT:rule_id}( %{SSP_SSL}:)? %{GREEDYDATA:protocol_msg},)?\s*%{PROTO_TAG:proto_tag}:%{WORD:protocol}(, %{LEN_TAG}:%{NUMBER:msg_len})?, (%{IP_PORT_TAG}:)?(%{IP_TAG}:)?%{IP:src_ip}(:%{INT:src_port})?( \(%{URIHOST:src_host}\))?( \(user:%{USERNAME:src_username}@%{HOSTNAME:src_domain}\) )?\s*->\s* %{IP:dst_ip}(:%{INT:dst_port})?\s*(\(user:%{USERNAME:dst_username}@%{HOSTNAME:dst_domain}\))?\s*(,)?( %{FLAGS_TAG}:\[\s*%{KERIO_PUB_SENTC:packet_flasgs}\s*\])?(,)?(%{TYPE_TAG}:%{INT:icmp_type})?( %{CODE_TAG}:%{INT:code_type})?( %{ID_NC_TAG}:%{INT:packet_id_tag})?( %{SEQUENCE_TAG}:%{INT:sequence})?\s*(%{ACK_TAG}:%{INT:acknowledge},)?( %{WIN_TAG}:%{INT:window_size},)?\s*(%{TCP_LEN_TAG}:%{INT:tcp_len})?(%{UDP_LEN_TAG}:%{INT:udp_len})?(%{TYPE_TAG}:%{INT:icmp_type})?( %{CODE_TAG}:%{INT:code_type})?( %{ID_TAG}:%{INT:packet_id_tag})?( %{SEQUENCE_TAG}:%{INT:icmp_sequence})?\s*(%{TTL_TAG}:%{INT:ttl})?\s*%{GREEDYDATA:payload}", # IPS 
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{KERIO_PUB_SENTC:rule_name}: %{KERIO_PUB_MSG:log_action}, %{PROTO_TAG:proto_tag}: %{WORD:protocol}, %{SOURCE_TAG}: %{IP:source_ip}, %{DESTINATION_TAG}: %{IP_REPEAT:dst_ip}, %{PORTS_TAG}: %{GREEDYDATA:dst_port}(, [\.\s]+)", # PORT SCAN
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{KERIO_PUB_SENTC:kerio_antivirus}: %{GREEDYDATA:msg}, %{CLIENT_TAG} %{USERNAME:username}(@%{HOSTNAME:domain})? %{IP:client_ip}, %{URI:url}%{GREEDYDATA:payload}", # IPS - AV check
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{KERIO_PUB_SENTC:kerio_antivirus} %{FILE_TAGE:file_tag}=\"%{URI:url}\" %{FIREWALL_TAG:fw_tag}=\"%{GREEDYDATA:firewall_name}\" %{HA_TAG}=\"%{GREEDYDATA:ha_name}\" %{HOST_IP_TAG}=\"%{IP:client_ip}\" %{HOSTNAME_TAG}=\"%{GREEDYDATA:hostname}\" %{PROTO_TAG}=\"%{WORD:protocol}\" %{USERNAME_TAG}=\"%{USERNAME:username}(@%{HOSTNAME:domain})?\" %{VIRUS_TAG}=\"%{GREEDYDATA:msg}\"%{GREEDYDATA:payload}" , # IPS - AV check
 					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{KERIO_SIMPLE_SENTENCE:client_device_name} \'%{USERNAME:username}(@%{HOSTNAME:domain})?\' %{WORD:connection_state} %{GREEDYDATA} %{IP:client_ip}(, %{GREEDYDATA} %{TIME:conncection_time})?%{GREEDYDATA:payload}", # VPN
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{USERNAME:username}(@%{HOSTNAME:domain})? - %{SESSION_TAG:session_tag} %{WORD:session_state} %{GREEDYDATA} %{IP:client_ip}(\.|,)?( %{USER_AGENT_TAG}:)?( %{GREEDYDATA:user_agent}(\.)?)?" , #VPN
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{AUTH_TAG:auth_tag}: %{KERIO_PUB_SENTC:client_device_name}: %{CLIENT_TAG}: %{IP:client_ip}: %{GREEDYDATA:msg} %{USERNAME:username}", #VPN
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{SYSLOG_DIV}%{GREEDYDATA:description}", #GENERIC
					"%{SYSLOGTIMESTAMP:date} %{SYSLOGHOST:device_name} %{WORD:device_tag}%{GREEDYDATA:description}" #GENERIC
					
				]
			}
		}
		
		
		grok {
			match => ["url", "^(?:https?:\/\/)?(?:[^@\/\n]+@)?(?:www\.)?(?<url_domain>[^:\/?\n]+)"]
		}

		
		if [dst_port] =~ /,/ {
			mutate {
				gsub => ["dst_port", " ", ""]
				split => {"dst_port" => "," }
			}
		}
		
		if [dst_ip] =~ /[\.]{2,}/{
			mutate{
				gsub => ["dst_ip", "\.\.\.", ""]
				gsub => ["dst_ip", " ", ""]
				split => {"dst_ip" => "," }
			}
		}
	
	
		if ([http_version] and [http_method]) or ([page_title] and [url]) {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "web-kerio-"
					"[event.category]" => "Web"
				}
			}
		}else if [rule_name] and [connection_tag] {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "traffic-kerio-"
					"[event.category]" => "Network Traffic"
				}
			}
		}else if ([rule_name] and [proto_tag]) or [kerio_antivirus] {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "idp-kerio-"
					"[event.category]" => "Intrusion Detection"
				}
			}
		}else if [mac_tag] or ([session_tag] and [device_tag] != "KerioVPN") {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "session-kerio-"
					"[event.category]" => "Network Session"
				}
			}
		}else if [device_tag] == "KerioVPN" and ([connection_state] or [msg] or [session_tag])  {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "vpn-kerio-"
					"[event.category]" => "Network Session"
				}
			}
		}else {
			mutate{
				add_field => {
					"[@metadata][sub_index_name]" => "generic-kerio-"
					"[event.category]" => "Generic"
				}
			}
		}
		
	
	
	
		mutate{
			rename => {	
				"[protocol]" => "network.transport.name"
				"[dst_username]" => "username"
				"[dst_domain]" => "domain"
				"[username]" => "user.name"
				"[src_ip]" => "source.ip"
				"[src_url]" => "source.url"
				"[dst_ip]" => "destination.ip"
				"[dst_url]" => "destination.url"
				"[src_port]" => "source.port"
				"[dst_port]" => "destination.port"
				"[device_name]" => "sensor.name"
				"[log_tag]" => "event.tag"
				"[event][plugin_id]" => "event.data_source.id"
				"[log_action]" => "event.action"
				"[method]" => "method"
				"[url]" => "url.orginal"
				"[url_domain]" => "url.domain"
				"[action]" => "vendor.action"
				"[hostname]" => "hostname"
				"[message]" => "event.original"
				"[msg]" => "message"
				"[src_name]" => "source.address"
				"[client_ip]" => "[client.ip]"
				"[client_host_name]" => "[client.hostname]"
				"[client_mac_address]" => "[client.mac]"
				"[client_device_vendor]" => "[client.device_vendor]"
				"[protocol_msg]" => "event.rule.description" 
				"[total_bytes]" => "total.bytes" 
				"[accepted_bytes]" => "accepted.bytes" 
				"[transmitted_bytes]" => "transmitted.bytes" 
				"[transferred_bytes]" => "transferred.bytes"
				"[total_packets]" => "total.packets" 
				"[accepted_packets]" => "accepted.packets" 
				"[transmitted_packets]" => "transmitted.packets" 
				"[page_title]" => "page.title"
				"[device_tag]" => "device.tag"
				"[connection_state]" => "connection.state"
				"[conncection_time]" => "conncection.time"
				"[client_device_name]" => "client.device_name"
				"[kerio_antivirus]" => "antivirus_messaage"
				
				 
 			}
			add_field => {
				"[event.data_source.name]" => "kerio"
				"[event.acf]" => "true"
				"[smart.forwarder]" => "SF-01"
			}
		}
	
	}


}



output {
	stdout{}
}
